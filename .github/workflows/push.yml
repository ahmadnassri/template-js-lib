# --------------------------------------------- #
# Note: this file originates in template-js-lib #
# --------------------------------------------- #

on:
  - push
  - workflow_dispatch

name: push

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}

jobs:
  metadata:
    runs-on: ubuntu-latest

    outputs:
      repository_is_template: ${{ steps.metadata.outputs.repository_is_template }}
      repository_default_branch: ${{ steps.metadata.outputs.repository_default_branch }}

    steps:
      - uses: actions/checkout@v3.2.0

      - id: metadata
        uses: ahmadnassri/action-metadata@v2.1.2

  commit-lint:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.2.0

      - uses: ahmadnassri/action-commit-lint@v2.0.9
        with:
          config: .github/linters/.commit-lint.yml

  mega-linter:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.2.0

      - uses: oxsecurity/megalinter/flavors/javascript@v6.17.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MEGALINTER_CONFIG: .github/linters/.mega-linter.yml
          GITHUB_COMMENT_REPORTER: true
          GITHUB_STATUS_REPORTER: true

      - uses: actions/upload-artifact@v3
        if: ${{ success() }} || ${{ failure() }}
        with:
          name: mega-linter-reports
          path: |
            megalinter-reports
            mega-linter.log

  npm-audit:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.2.0

      - uses: actions/setup-node@v3.6.0
        with:
          node-version: latest

      - run: npm audit --audit-level=critical

  test-strategy:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.parse.outputs.matrix }}

    steps:
      - uses: actions/checkout@v3.2.0
      - id: parse
        run: echo "matrix=$(jq -c . < .github/test-matrix.json)" >> "$GITHUB_OUTPUT"

  test-run:
    needs:
      - npm-audit
      - test-strategy

    timeout-minutes: 5

    name: ${{ matrix.name || format('node v{0} @ {1}', matrix.node-version, matrix.os) || 'test-step' }}

    strategy:
      matrix: ${{ fromJSON(needs.test-strategy.outputs.matrix) }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3.2.0
        with:
          submodules: true

      - uses: actions/setup-node@v3.6.0
        with:
          registry-url: https://npm.pkg.github.com
          node-version: ${{ matrix.node-version }}
          cache: npm

      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: npx playwright install-deps
        if: ${{ matrix.with-browsers == 'true' }}

      - run: npm run test:ci
        env:
          WITH_BROWSERS: ${{ matrix.with-browsers }}

  release:
    needs:
      - commit-lint
      - mega-linter
      - metadata
      - test-run

    # only runs on main branch for non template repos
    if: |
      needs.metadata.outputs.repository_is_template == 'false' &&
      needs.metadata.outputs.repository_default_branch == github.ref_name

    timeout-minutes: 20

    runs-on: ubuntu-latest

    outputs:
      published: ${{ steps.release.outputs.published }}
      version: ${{ steps.release.outputs.release-version }}
      version-major: ${{ steps.release.outputs.release-version-major }}
      version-minor: ${{ steps.release.outputs.release-version-minor }}

    steps:
      - uses: actions/checkout@v3.2.0
        with:
          submodules: true

      - run: npm ci
      - run: npm run build

      - id: release
        uses: ahmadnassri/action-semantic-release@v2.2.0
        with:
          config: ${{ github.workspace }}/.semantic.json
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  mirror:
    needs: release

    timeout-minutes: 5

    runs-on: ubuntu-latest

    if: ${{ needs.release.outputs.published == 'true' }}

    steps:
      - uses: actions/checkout@v3.2.0
        with:
          submodules: true

      - uses: actions/setup-node@v3.6.0
        with:
          registry-url: https://npm.pkg.github.com
          node-version: latest

      - run: npm ci
      - run: npm run build

      - name: publish to github registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jq '.name = "@'"${GITHUB_REPOSITORY/node-/}"'"' package.json > /tmp/package.json; mv /tmp/package.json .
          npm version --no-git-tag-version "v${{ needs.release.outputs.version }}"
          npm publish

  template-sync:
    timeout-minutes: 5

    needs:
      - metadata
      - test-run
      - commit-lint
      - mega-linter

    # only runs on main branch for template repos
    if: |
      needs.metadata.outputs.repository_is_template == 'true' &&
      needs.metadata.outputs.repository_default_branch == github.ref_name

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.2.0

      - uses: ahmadnassri/action-template-repository-sync@v2.3.4
        with:
          github-token: ${{ secrets.GH_TOKEN }}
